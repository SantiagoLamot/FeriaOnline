CREATE DATABASE IF NOT EXISTS Feria_Online_Tpq_DB;
USE Feria_Online_Tpq_DB;

CREATE TABLE usuarios_tb (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre_de_usuario VARCHAR(50) NOT NULL UNIQUE,
    correo VARCHAR(100) NOT NULL UNIQUE,
    contrasena VARCHAR(255) NOT NULL,
    nombre VARCHAR(50),
    apellido VARCHAR(50),
    foto_de_perfil TEXT
);

CREATE TABLE publicaciones_tb (
    id_publicacion INT AUTO_INCREMENT PRIMARY KEY,
    nombre_producto VARCHAR(100) NOT NULL,
    descripcion TEXT,
    precio DECIMAL(10,2) NOT NULL,
    estado ENUM('Activo', 'Inactivo') NOT NULL,
    id_usuario_vendedor INT NOT NULL,
    FOREIGN KEY (id_usuario_vendedor) REFERENCES usuarios_tb(id_usuario) ON DELETE CASCADE
);

CREATE TABLE imagenes_por_publicacion_tb (
    id_imagenes INT AUTO_INCREMENT PRIMARY KEY,
    id_publicacion INT NOT NULL,
    imagen TEXT NOT NULL,
    FOREIGN KEY (id_Publicacion) REFERENCES publicaciones_tb(id_publicacion) ON DELETE CASCADE
);

CREATE TABLE transacciones_tb (
    id_orden INT AUTO_INCREMENT PRIMARY KEY,
    id_publicacion INT NOT NULL,
    id_usuario_comprador INT NOT NULL,
    id_usuario_vendedor INT NOT NULL,
    metodo_de_pago VARCHAR(50) NOT NULL,
    fecha DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    estado ENUM('Pendiente', 'Completado', 'Cancelado') NOT NULL,
    FOREIGN KEY (id_publicacion) REFERENCES publicaciones_tb(id_publicacion) ON DELETE CASCADE,
    FOREIGN KEY (id_usuario_comprador) REFERENCES usuarios_tb(id_usuario) ON DELETE CASCADE,
    FOREIGN KEY (id_usuario_vendedor) REFERENCES usuarios_tb(id_usuario) ON DELETE CASCADE
);

CREATE TABLE tokens_tb (
    id INT AUTO_INCREMENT PRIMARY KEY,
    token VARCHAR(255) UNIQUE,
    token_type ENUM('BEARER') DEFAULT 'BEARER',
    is_revoked BOOLEAN NOT NULL,
    is_expired BOOLEAN NOT NULL,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES usuarios_tb(id_usuario) ON DELETE CASCADE
);